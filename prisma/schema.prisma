generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  displayName  String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  sessions     Session[]
  tags         Tag[]
  logs         Log[]
}

model Session {
  id         String    @id @default(uuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  refreshJti String    @unique
  revokedAt  DateTime?
  createdAt  DateTime  @default(now())
  expiresAt  DateTime
}

model Tag {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  slug      String
  name      String
  color     String?
  createdAt DateTime @default(now())
  Log       Log[]

  @@unique([userId, slug])
}

model Log {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  tagId String?
  tag   Tag?    @relation(fields: [tagId], references: [id], onDelete: SetNull)

  text       String
  occurredAt DateTime
  createdAt  DateTime @default(now())
  amount     Decimal? @db.Decimal(18, 2)
  data       Json?    @default("{}")

  @@index([userId, occurredAt(sort: Desc)])
  @@index([tagId, occurredAt(sort: Desc)])
}
